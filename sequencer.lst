                      ; Basic sequencer program
                      ; Can be jumped into at entry address
                      ; Expects stack to be set up
                      
                      ; =========================
                      ; Monitor Function Addresses
                      ; =========================
F804                  inch    equ $F804
F806                  inche   equ $F806
F808                  inchek  equ $F808
F80A                  outch   equ $F80A
F80C                  pdata   equ $F80C
F80E                  pcrlf   equ $F80E
                      
                      ; =========================
                      ; Sequencer Addresses
                      ; =========================
E020                  seq_io_base equ $E020
                      
4000                  seq_data_base equ $4000
4040                  seq_tempo_adr equ $4040
4042                  seq_record_adr equ $4042
4044                  seq_temp_tempo_adr equ $4044
                      
                      
                      ; =========================
                      ; Entry
                      ; =========================
8000                          org $8000
                      
                              ;fcb 0x10
                              ;fcb 0x4a
                      
                              ; Print banner
8000  AD9FF80E                jsr [pcrlf]
                      
8004  861E                    lda #30
8006  BD82F2                  jsr printspaces
8009  8E8341                  ldx #banner
800C  AD9FF80C                jsr [pdata]
                      
8010  8614                    lda #20
8012  BD82F2                  jsr printspaces
8015  8E8359                  ldx #controls
8018  AD9FF80C                jsr [pdata]
                      
                              ; Set default tempo
801C  CC0005                  ldd #5
801F  FD4040                  std seq_tempo_adr
                      
8022  BD8215          redraw  jsr drawscreen
8025  AD9FF808        poll    jsr [inchek]
8029  26FA                    bne poll
                      
802B  AD9FF804                jsr [inch]
802F  8166                    cmpa #'f'
8031  271D                    beq crashme
8033  8170                    cmpa #'p'
8035  270A                    beq do_playback
8037  8172                    cmpa #'r'
8039  270B                    beq do_record
803B  8174                    cmpa #'t'
803D  270C                    beq do_tempo
803F  20E4                    bra poll
8041                  do_playback
8041  BD81B9                  jsr playback
8044  20DC                    bra redraw
8046                  do_record
8046  BD80DA                  jsr record
8049  20D7                    bra redraw
804B                  do_tempo
804B  BD807E                  jsr tempo
804E  20D2                    bra redraw
8050                  crashme
8050  8E8059                  ldx #cm_msg
8053  AD9FF80C                jsr [pdata]
8057                  crashmenow
8057  10                      fcb $10
8058  45                      fcb $45
8059  0D0A54686973206372617368206973206D616E75616C6C79207472696767657265640D0A cm_msg  fcc "\r\nThis crash is manually triggered\r\n"
807D  04                      fcb $4
                      
                      ; =========================
                      ; Tempo subroutine
                      ; =========================
807E                  tempo
807E  8E8395                  ldx #tempo_prompt_msg
8081  AD9FF80C                jsr [pdata]
                      
                              ; Clear temporary tempo
8085  CC0000                  ldd #0
8088  FD4044                  std seq_temp_tempo_adr
                      
808B  AD9FF808        t_waitc jsr [inchek]
808F  27FA                    beq t_waitc
8091  AD9FF806                jsr [inche]
8095  812E                    cmpa #'.'
8097  2723                    beq t_write
8099  8130                    cmpa #'0'
809B  2D2C                    blt t_done
809D  8139                    cmpa #'9'
809F  2E28                    bgt t_done
                      
                              ; Convert char to number
80A1  8030                    suba #48
80A3  3402                    pshs a
                      
                              ; Multiply existing temporary tempo by 10 and add entered number
80A5  108E4044                ldy #seq_temp_tempo_adr
80A9  E621                    ldb 1,y
80AB  860A                    lda #10
80AD  3D                      mul
80AE  1F01                    tfr d,x
80B0  3504                    puls b
80B2  3A                      abx
80B3  AFA4                    stx ,y
                      
                              ; If the number is too big to fit into b before multiplication, write it (gives range of 2559)
80B5  8C00FF                  cmpx #255
80B8  2E02                    bgt t_write
                      
80BA  20CF                    bra t_waitc
80BC  FC4044          t_write ldd seq_temp_tempo_adr
80BF  FD4040                  std seq_tempo_adr
                      
80C2  8E83BE                  ldx #tempo_set_msg
80C5  AD9FF80C                jsr [pdata]
80C9  AD9FF80E        t_done  jsr [pcrlf]
80CD  39                      rts
                      
                      ; =========================
                      ; Record subroutine
                      ; =========================
80CE  39              rc_quit rts
80CF  862E            rc_clrv lda #'.'
80D1  AD9FF80A                jsr [outch]
80D5  8600                    lda #0
80D7  160089                  lbra rc_write
80DA                  record
                              ; Prompt for channel
80DA  8E8390                  ldx #channel_prompt_msg
80DD  AD9FF80C                jsr [pdata]
                      
                              ; Get channel to record
80E1  AD9FF808        rc_wfch jsr [inchek]
80E5  27FA                    beq rc_wfch
80E7  AD9FF804                jsr [inch]
80EB  8173                    cmpa #'s'
80ED  27DF                    beq rc_quit
80EF  8131                    cmpa #'1'
80F1  2DEE                    blt rc_wfch
80F3  8134                    cmpa #'4'
80F5  2EEA                    bgt rc_wfch
                              
                              ; Echo channel select
80F7  1F89                    tfr a,b
80F9  AD9FF80A                jsr [outch]
                              
                              ; Store selected channel
80FD  C031                    subb #49  ; Convert '1'-'4' to 0-3
80FF  8610                    lda #0x10
8101  3D                      mul
8102  8E4000                  ldx #seq_data_base
8105  3A                      abx
8106  BF4042                  stx seq_record_adr
                      
                              ; Clear the existing channel of data
8109  C610                    ldb #0x10
810B  4F                      clra
810C  A780            rc_clr  sta ,x+
810E  5A                      decb
810F  26FB                    bne rc_clr
                      
                              ; Print rfecord message
8111  8E838B                  ldx #record_msg
8114  AD9FF80C                jsr [pdata]
8118  8606                    lda #6
811A  BD82F2                  jsr printspaces
                      
811D  867C            rc_run  lda #'|'
811F  AD9FF80A                jsr [outch]
                              
8123  4F                      clra
8124  5F                      clrb
8125  3402                    pshs a
                      
8127  8602            rc_loop lda #2
8129  BD82F2                  jsr printspaces
                      
                              ; Delay at start to see if press is entered
812C  BD8309                  jsr delay_tempo
                              
812F  BE4042                  ldx seq_record_adr
8132  3504                    puls b
8134  3404                    pshs b
8136  3A                      abx
                      
8137  AD9FF808                jsr [inchek]
813B  2733                    beq rc_no_input
813D  AD9FF804                jsr [inch]
8141  8173                    cmpa #'s'
8143  2771                    beq rc_done
8145  812E                    cmpa #'.'
8147  1027FF84                lbeq rc_clrv
814B  8131                    cmpa #'1'
814D  2D21                    blt rc_no_input
814F  8138                    cmpa #'8'
8151  2E1D                    bgt rc_no_input
                      
                              ; Echo printed character
8153  1F89                    tfr a,b
8155  AD9FF80A                jsr [outch]
                      
                              ; Convert entered character to value
8159  C030                    subb #48
815B  8601                    lda #1
815D  5A              rc_conv decb
815E  2703                    beq rc_write
8160  48                      lsla
8161  20FA                    bra rc_conv
                              
8163                  rc_write ; Store entered character
8163  A784                    sta ,x
                      
8165  3502                    puls a
8167  3402                    pshs a
8169  1F89                    tfr a,b
                      
                              ; Play current beat
816B  BD8322                  jsr play_beat
816E  2021                    bra rc_cont
8170                  rc_no_input
8170  3502                    puls a
8172  3402                    pshs a
8174  BD8322                  jsr play_beat
                      
                              ; Print previous value on no input
8177  E684                    ldb ,x
8179  8601                    lda #1
817B                  rc_check_bit
817B  C501                    bitb #1
817D  2608                    bne rc_print_val
817F  54                      lsrb
8180  4C                      inca
8181  8109                    cmpa #9
8183  26F6                    bne rc_check_bit
8185  86FE                    lda #-2  ; When 48 is added it will turn into a dot
8187                  rc_print_val
8187  8B30                    adda #48
8189  AD9FF80A                jsr [outch]
                      
                              ; Get data for checking end of line
818D  3504                    puls b
818F  3404                    pshs b
                              
8191                  rc_cont ; Print the end mark if at end of line
8191  C10F                    cmpb #15
8193  2606                    bne rc_next
8195  867C                    lda #'|'
8197  AD9FF80A                jsr [outch]
                      
                              ; Increment beat counter
819B  3502            rc_next puls a
819D  4C                      inca
819E  3402                    pshs a
81A0  1F89                    tfr a,b
81A2  8110                    cmpa #16
81A4  102DFF7F                lblt rc_loop
                      
                              ; If at end of line, start a new one
81A8  AD9FF80E                jsr [pcrlf]
81AC  860F                    lda #15
81AE  BD82F2                  jsr printspaces
81B1  3502                    puls a
81B3  16FF67                  lbra rc_run
                              
81B6  3502            rc_done puls a
81B8  39                      rts
                      
                      ; =========================
                      ; Playback subroutine
                      ; =========================
81B9                  playback
                              ; Print playback symbol
81B9  8E8382                  ldx #playback_msg
81BC  AD9FF80C                jsr [pdata]
81C0  8607                    lda #7
81C2  BD82F2                  jsr printspaces
                      
81C5  867C            pb_run  lda #'|'
81C7  AD9FF80A                jsr [outch]
                              
81CB  4F                      clra
81CC  5F                      clrb
81CD  3402                    pshs a
                      
81CF  BD8322          pb_loop jsr play_beat
                      
                              ; Print tick
81D2  8602                    lda #2
81D4  BD82F2                  jsr printspaces
81D7  862E                    lda #'.'
81D9  AD9FF80A                jsr [outch]
                              
                              ; Print the end mark if at end of line
81DD  C10F                    cmpb #15
81DF  2606                    bne pb_del
81E1  867C                    lda #'|'
81E3  AD9FF80A                jsr [outch]
                      
                              ; Delay
81E7  BD8309          pb_del  jsr delay_tempo
                      
                              ; Check for input after delay
81EA  AD9FF808        pb_poll jsr [inchek]
81EE  270A                    beq pb_no_input
81F0  AD9FF804                jsr [inch]
81F4  8173                    cmpa #'s'
81F6  271A                    beq pb_done
81F8  20F0                    bra pb_poll
81FA                  pb_no_input
                              ; Increment beat counter
81FA  3502                    puls a
81FC  4C                      inca
81FD  3402                    pshs a
81FF  1F89                    tfr a,b
8201  8110                    cmpa #16
8203  2DCA                    blt pb_loop
                      
                              ; If at end of line, start a new one
8205  AD9FF80E                jsr [pcrlf]
8209  860F                    lda #15
820B  BD82F2                  jsr printspaces
820E  3502                    puls a
8210  20B3                    bra pb_run
                              
8212  3502            pb_done puls a
8214  39                      rts
                      
                      
                      ; =========================
                      ; Draw Screen subroutine
                      ; =========================
                      ; Draws the screen displaying the sequence
8215                  drawscreen
8215  AD9FF80E                jsr [pcrlf]
8219  4F                      clra
821A  3402                    pshs a
                              
821C                  ds_drawrow
                              ; Print out the pre-padding
821C  860A                    lda #10 ; Pre-padding
821E  BD82F2                  jsr printspaces
                      
                              ; Print row title
8221  3504                    puls b
8223  3404                    pshs b
8225  58                      lslb
8226  8E83CB                  ldx #header_table
8229  3A                      abx
822A  AE84                    ldx ,x
822C  AD9FF80C                jsr [pdata]
                      
                              ; Print space
8230  8620                    lda #32
8232  AD9FF80A                jsr [outch]
                      
                              ; Print table right border
8236  C600                    ldb #0
8238                  ds_draw_border
8238  3502                    puls a
823A  3402                    pshs a
823C  8100                    cmpa #0
823E  2702                    beq ds_fr_c
8240  861D                    lda #0x1D  ; If A is not the first row, set to '|' (0x7C), else set to 0x5C
8242  8B5F            ds_fr_c adda #0x5F
8244  AD9FF80A                jsr [outch]
8248  C101                    cmpb #1
824A  10270093                lbeq ds_loop
                      
                              ; Print contents of table
824E  3502                    puls a
8250  3402                    pshs a
8252  8100                    cmpa #0
8254  2748                    beq ds_top_row
8256  8101                    cmpa #1
8258  2759                    beq ds_beats_row
825A  8102                    cmpa #2
825C  273C                    beq ds_mid_row
825E  8107                    cmpa #7
8260  2738                    beq ds_mid_row
                      
                              ; Else channel row
                              ; Load base address of sequence
8262  3502                    puls a
8264  3402                    pshs a
8266  8003                    suba #3
8268  C610                    ldb #0x10
826A  3D                      mul
826B  8E4000                  ldx #seq_data_base
826E  3A                      abx
                              
826F  4F                      clra
8270  3402                    pshs a
8272                  ds_draw_channel_beat
8272  8602                    lda #2
8274  BD82F2                  jsr printspaces
8277  E680                    ldb ,x+
8279  8601                    lda #1
                      
827B                  ds_channel_check_bit
827B  C501                    bitb #1
827D  2608                    bne ds_print_channel_val
827F  54                      lsrb
8280  4C                      inca
8281  8109                    cmpa #9
8283  26F6                    bne ds_channel_check_bit
8285  86F0                    lda #-16  ; When 48 is added it will turn into a space
                      
8287                  ds_print_channel_val
8287  8B30                    adda #48
8289  AD9FF80A                jsr [outch]
                      
828D  3502                    puls a
828F  4C                      inca
8290  3402                    pshs a
8292  8110                    cmpa #16
                      
8294  26DC                    bne ds_draw_channel_beat
8296  3502                    puls a
                      
8298  2042                    bra ds_border_close
                      
                      
829A                  ds_mid_row
829A  862D                    lda #'-'
829C  2002                    bra ds_draw_row
829E                  ds_top_row
829E  865F                    lda #'_'
82A0                  ds_draw_row
82A0  3402                    pshs a
82A2  C630                    ldb #0x30       ; Row Width: 48
82A4  3502            ds_dr_l puls a          ; Print variable on stack b times
82A6  3402                    pshs a
82A8  AD9FF80A                jsr [outch]
82AC  5A                      decb
82AD  26F5                    bne ds_dr_l
82AF  3502                    puls a
82B1  2029                    bra ds_border_close
                      
82B3                  ds_beats_row
82B3  C601                    ldb #1
                      
82B5                  ds_print_beat
                              ; Print space
82B5  8620                    lda #32
82B7  AD9FF80A                jsr [outch]
                      
                              ; Print tens digit, or space
82BB  8620                    lda #32
82BD  C10A                    cmpb #10
82BF  2D02                    blt ds_beat_print_tens
82C1  8631                    lda #'1'
82C3                  ds_beat_print_tens
82C3  AD9FF80A                jsr [outch]
                      
                              ; Print ones digit
82C7  1F98                    tfr b,a
82C9  C10A                    cmpb #10
82CB  2D02                    blt ds_beat_skip_subtract
82CD  800A                    suba #10
82CF                  ds_beat_skip_subtract
82CF  8B30                    adda #48
82D1  AD9FF80A                jsr [outch]
                      
82D5  5C                      incb
82D6  C110                    cmpb #16
82D8  2FDB                    ble ds_print_beat
                      
82DA  2000                    bra ds_border_close
                      
                      
                              ; Print table border
82DC                  ds_border_close
82DC  C601                    ldb #1
82DE  16FF57                  lbra ds_draw_border
82E1                  ds_loop
82E1  AD9FF80E                jsr [pcrlf]
82E5  3502                    puls a
82E7  4C                      inca
                      
82E8  8108                    cmpa #8
82EA  2705                    beq ds_done
                              
82EC  3402                    pshs a
82EE  16FF2B                  lbra ds_drawrow
                      
82F1  39              ds_done rts
                      
                      ; =========================
                      ; Print Spaces Subroutine
                      ; =========================
                      ; Prints number of spaces in A register
82F2                  printspaces
82F2  3404                    pshs b
82F4  1F89                    tfr a,b
82F6  5D              ps_loop tstb
82F7  270D                    beq ps_done
82F9  3404                    pshs b
82FB  8620                    lda #32  ; Load with space
82FD  AD9FF80A                jsr [outch]
8301  3504                    puls b
8303  5A                      decb
8304  20F0                    bra ps_loop
8306  3504            ps_done puls b
8308  39                      rts
                      
                      ; =========================
                      ; Delay Subroutine
                      ; =========================
8309                  delay_tempo
8309  3410                    pshs x
830B  1F12                    tfr x,y
830D  8E0000                  ldx #0
8310  C601                    ldb #1
8312  4F              d_ms    clra
8313                  d_cyc
8313  4C                      inca
8314  12                      nop
8315  814A                    cmpa #74
8317  26FA                    bne d_cyc
                      
8319  3A                      abx
831A  BC4040                  cmpx seq_tempo_adr
831D  26F3                    bne d_ms
831F  3510                    puls x
8321  39                      rts
                      
                      ; =========================
                      ; Play Beat Subroutine
                      ; =========================
                      ; The a register should contain the offset
                      ; The b register is saved
8322                  play_beat
8322  3414                    pshs x,b
                      
                              ; Setup initial address
8324  8E4000                  ldx #seq_data_base
8327  1F89                    tfr a,b
8329  3A                      abx
832A  108EE020                ldy #seq_io_base
                      
                              ; Set channel count to transfer
832E  C604                    ldb #4
                              
                              ; Write each channel's value for the given beat
8330  3404            p_b_wch pshs b
8332  A684                    lda ,x
8334  A7A0                    sta ,y+
8336  C610                    ldb #16
8338  3A                      abx
8339  3504                    puls b
833B  5A                      decb
833C  26F2                    bne p_b_wch
                      
833E  3514                    puls x,b
8340  39                      rts
                      
                      
                      ; =========================
                      ; Data Section
                      ; =========================
                      
8341  2A2A2A42617369632053657175656E6365722A2A2A0D0A banner  fcc "***Basic Sequencer***\r\n"
8358  04                      fcb $04
8359                  controls
8359  503A20506C6179202D20523A205265636F7264202D20543A2054656D706F202D20533A2053746F70         fcc "P: Play - R: Record - T: Tempo - S: Stop"
8381  04                      fcb $04
8382                  playback_msg
8382  506C61796261636B         fcc "Playback"
838A  04                      fcb $04
838B                  record_msg
838B  3A526563                fcc ":Rec"
838F  04                      fcb $04
8390                  channel_prompt_msg
8390  43683F20                fcc "Ch? "
8394  04                      fcb $04
8395                  tempo_prompt_msg
8395  456E7465722054656D706F20282E20746F20656E642C206F7468657220746F2061626F7274293A20         fcc "Enter Tempo (. to end, other to abort): "
83BD  04                      fcb $04
83BE                  tempo_set_msg
83BE  202D2054656D706F20536574         fcc " - Tempo Set"
83CA  04                      fcb $04
83CB                  header_table
83CB  83DB                    fdb header_blank
83CD  83E0                    fdb header_beat
83CF  83DB                    fdb header_blank
83D1  83E5                    fdb header_ch1
83D3  83EA                    fdb header_ch2
83D5  83EF                    fdb header_ch3
83D7  83F4                    fdb header_ch4
83D9  83DB                    fdb header_blank
                      
83DB                  header_blank
83DB  20202020                fcc "    "
83DF  04                      fcb $04
                      
83E0                  header_beat
83E0  42656174                fcc "Beat"
83E4  04                      fcb $04
                      
83E5                  header_ch1
83E5  43682031                fcc "Ch 1"
83E9  04                      fcb $04
                      
83EA                  header_ch2
83EA  43682032                fcc "Ch 2"
83EE  04                      fcb $04
                      
83EF                  header_ch3
83EF  43682033                fcc "Ch 3"
83F3  04                      fcb $04
                      
83F4                  header_ch4
83F4  43682034                fcc "Ch 4"
83F8  04                      fcb $04
